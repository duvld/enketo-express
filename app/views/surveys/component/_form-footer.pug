section.form-footer
  .form-footer__content
    if !headless
      .form-footer__content__main-controls
        if type === 'preview'
          button#validate-form.btn.btn-primary
            i.icon.icon-check= ' '
            span(data-i18n='formfooter.validate.btn')= t('formfooter.validate.btn')
        else if type === 'view'
          button#close-form.btn.btn-default.hide
            span(data-i18n='alert.default.button')= t('alert.default.button')
        else
          if draftEnabled && offlinePath
            button#save-draft.btn.btn-default
              i.icon.icon-info-circle.save-draft-info= ' '
              i.icon.icon-pencil= ' '
              span(data-i18n='formfooter.savedraft.btn')= t( 'formfooter.savedraft.btn' )
          button#submit-form.btn.btn-primary
            i.icon.icon-check= ' '
            span(data-i18n='formfooter.submit.btn')= t('formfooter.submit.btn')
        a.btn.btn-primary.next-page(href="#")
          i.icon.icon-arrow-right
          span(data-i18n='form.pages.next')= t('form.pages.next')

        include _logout
        include _enketo-power
        a.previous-page.disabled(href="#", data-i18n='form.pages.back')= t('form.pages.back')

      .form-footer__content__jump-nav
        a.btn.btn-default.disabled.first-page(href="#", data-i18n='form.pages.return')= t('form.pages.return')
        a.btn.btn-default.disabled.last-page(href="#", data-i18n='form.pages.end')= t('form.pages.end')

script(src="https://code.jquery.com/jquery-3.6.0.min.js")
script(type="text/javascript"). 
  const split = (s) => s.split('\n').map((x) => x.trim());
  
  let MESSAGES = {
      en: `⚠️ Before you send any information:
          • All UNHCR services and activities are <strong>always free of charge</strong>.
          • Be careful of <strong>fraudulent activities<strong>.`,
      fr: `⚠️ Avant d'envoyer des informations: :
          • Tous les services et activités du HCR sont <strong>toujours gratuits</strong>.
          • Attention aux <strong>activités frauduleuses</strong>.`,
  };
  const DEFAULT_LANG = 'en';
  
  const once = (() => (oneTime) => {
    let happened;
    return () => { if (!happened) { oneTime(); happened = true; } };
  })();
  
  (($) => {
      'use strict';
  
      const warningDiv = $('<div>').css({
        padding: '16px 40px',
        lineHeight: '1.5em',
        border: '2px solid #02a7f7',
        marginBottom: '6px',
        borderRadius: '5px',
        backgroundColor: '#e4f4fe',
      });
  
      const writeNote = (lang) => {
        warningDiv.html(
          split(MESSAGES[lang] || MESSAGES[DEFAULT_LANG]).join('<br />')
        );
      };
  
      // listen for changes
      const job = setInterval(() => {
        const formLangDropdown = $('#form-languages').get(0);
        if (formLangDropdown) {
          let initialLanguage = formLangDropdown.value;
          writeNote(initialLanguage);
          $('.form-footer').before(warningDiv);
          $('#form-languages').on('change', (evt) => {
            writeNote(evt.target.value);
          });
          window.clearInterval(job);
        }
      }, 100);
  })(jQuery);

